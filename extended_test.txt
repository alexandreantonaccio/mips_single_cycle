00100000000100000000000000000101   // 0x00: addi $s0, $zero, 5
00100000000100010000000000000011   // 0x04: addi $s1, $zero, 3
00000010000100011001000000100000   // 0x08: add $s2, $s0, $s1
00000010000100011001100000101010   // 0x0C: slt $s3, $s0, $s1
00101010000101000000000000000110   // 0x10: slti $s4, $s0, 6
00010010001100010000000000000001   // 0x14: beq $s0, $s1, 1 (n찾o toma)
00100000000101010000000000001010   // 0x18: addi $s5, $zero, 10
10101100000100100000000000000000   // 0x1C: sw $s2, 0($zero)
10001100000101100000000000000000   // 0x20: lw $s6, 0($zero)
00001000000000000000000000101100   // 0x24: j 0x2C (testes BNE)
00100000000100000000000000000101   // 0x2C: addi $s0, $zero, 5
00100000000100010000000000000101   // 0x30: addi $s1, $zero, 5
00010110001100010000000000000001   // 0x34: bne $s0, $s1, 1 (n찾o toma)
00100000000101110000000000000001   // 0x38: addi $s7, $zero, 1 (executa)
00001000000000000000000001000000   // 0x3C: j 0x40 (pr처ximo teste)
00100000000100000000000000010100   // 0x40: addi $t0, $zero, 20
00100000000100010000000000010101   // 0x44: addi $t1, $zero, 21
00010101000010010000000000000001   // 0x48: bne $t0, $t1, 1 (toma)
00100000000010000000000000000000   // 0x4C: addi $t0, $zero, 0 (n찾o executa)
00100000000010000000000000000001   // 0x50: addi $t0, $zero, 1 (executa)
00001000000000000000000001010100   // 0x54: j 0x54 (loop)