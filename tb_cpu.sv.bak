`timescale 1ns/1ps

module tb_cpu();

    logic clk, reset;
    logic [31:0] writedata, dataadr;
    logic memwrite;
    
    mips_sc_org dut (
        .clk(clk),
        .reset(reset),
        .writedata(writedata),
        .dataadr(dataadr),
        .memwrite(memwrite)
    );
   
    always begin
        clk = 1; #5;
        clk = 0; #5;
    end

    initial begin

        reset = 1;
        #10; 
        reset = 0;
        
        #1000;
        
        $finish;
    end
    initial begin
    forever @(negedge clk) begin
        if (!reset) begin
            // Display focado nos registradores do Bubble Sort Otimizado
            $display("PC=%h | ra=%h | i(s0)=%d j(s1)=%d | swapped(s2)=%b | arr[j](t5)=%h arr[j+1](t6)=%h",
                dut.pc,               // Contador de Programa
                dut.cpu.dp.rf.rf[31], // $ra - Endereço de Retorno
                dut.cpu.dp.rf.rf[16], // $s0 - Contador do loop externo 'i'
                dut.cpu.dp.rf.rf[17], // $s1 - Contador do loop interno 'j'
                dut.cpu.dp.rf.rf[10], // $s2 - Flag 'swapped' (o coração da otimização)
                dut.cpu.dp.rf.rf[11], // $t5 - Valor de arr[j]
                dut.cpu.dp.rf.rf[12]  // $t6 - Valor de arr[j+1]
            );
        end
    end
end

endmodule